{"version":3,"file":"bundle.js","sources":["../node_modules/@stdlib/utils-define-property/lib/define_property.js","../node_modules/@stdlib/utils-define-property/lib/has_define_property_support.js","../node_modules/@stdlib/utils-define-property/lib/builtin.js","../node_modules/@stdlib/utils-define-property/lib/polyfill.js","../node_modules/@stdlib/utils-define-property/lib/index.js","../node_modules/@stdlib/utils-define-nonenumerable-read-only-property/lib/main.js","../node_modules/@stdlib/math-base-special-fast-abs/lib/abs.js","../lib/hypot.js","../node_modules/@stdlib/math-base-special-fast-abs/lib/index.js","../node_modules/@stdlib/math-base-special-labs/lib/main.js","../lib/hypot1b.js","../node_modules/@stdlib/math-base-special-labs/lib/index.js","../lib/hypot2a.js","../lib/hypot2b.js","../lib/closure1a.js","../lib/closure1b.js","../lib/factory.js","../lib/hypot1a.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\nvar main = ( typeof Object.defineProperty === 'function' ) ? Object.defineProperty : null;\n\n\n// EXPORTS //\n\nmodule.exports = main;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( './define_property.js' );\n\n\n// MAIN //\n\n/**\n* Tests for `Object.defineProperty` support.\n*\n* @private\n* @returns {boolean} boolean indicating if an environment has `Object.defineProperty` support\n*\n* @example\n* var bool = hasDefinePropertySupport();\n* // returns <boolean>\n*/\nfunction hasDefinePropertySupport() {\n\t// Test basic support...\n\ttry {\n\t\tdefineProperty( {}, 'x', {} );\n\t\treturn true;\n\t} catch ( err ) { // eslint-disable-line no-unused-vars\n\t\treturn false;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = hasDefinePropertySupport;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @name defineProperty\n* @type {Function}\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nvar defineProperty = Object.defineProperty;\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle, no-proto */\n\n'use strict';\n\n// VARIABLES //\n\nvar objectProtoype = Object.prototype;\nvar toStr = objectProtoype.toString;\nvar defineGetter = objectProtoype.__defineGetter__;\nvar defineSetter = objectProtoype.__defineSetter__;\nvar lookupGetter = objectProtoype.__lookupGetter__;\nvar lookupSetter = objectProtoype.__lookupSetter__;\n\n\n// MAIN //\n\n/**\n* Defines (or modifies) an object property.\n*\n* ## Notes\n*\n* -   Property descriptors come in two flavors: **data descriptors** and **accessor descriptors**. A data descriptor is a property that has a value, which may or may not be writable. An accessor descriptor is a property described by a getter-setter function pair. A descriptor must be one of these two flavors and cannot be both.\n*\n* @param {Object} obj - object on which to define the property\n* @param {string} prop - property name\n* @param {Object} descriptor - property descriptor\n* @param {boolean} [descriptor.configurable=false] - boolean indicating if property descriptor can be changed and if the property can be deleted from the provided object\n* @param {boolean} [descriptor.enumerable=false] - boolean indicating if the property shows up when enumerating object properties\n* @param {boolean} [descriptor.writable=false] - boolean indicating if the value associated with the property can be changed with an assignment operator\n* @param {*} [descriptor.value] - property value\n* @param {(Function|void)} [descriptor.get=undefined] - function which serves as a getter for the property, or, if no getter, undefined. When the property is accessed, a getter function is called without arguments and with the `this` context set to the object through which the property is accessed (which may not be the object on which the property is defined due to inheritance). The return value will be used as the property value.\n* @param {(Function|void)} [descriptor.set=undefined] - function which serves as a setter for the property, or, if no setter, undefined. When assigning a property value, a setter function is called with one argument (the value being assigned to the property) and with the `this` context set to the object through which the property is assigned.\n* @throws {TypeError} first argument must be an object\n* @throws {TypeError} third argument must be an object\n* @throws {Error} property descriptor cannot have both a value and a setter and/or getter\n* @returns {Object} object with added property\n*\n* @example\n* var obj = {};\n*\n* defineProperty( obj, 'foo', {\n*     'value': 'bar'\n* });\n*\n* var str = obj.foo;\n* // returns 'bar'\n*/\nfunction defineProperty( obj, prop, descriptor ) {\n\tvar prototype;\n\tvar hasValue;\n\tvar hasGet;\n\tvar hasSet;\n\n\tif ( typeof obj !== 'object' || obj === null || toStr.call( obj ) === '[object Array]' ) {\n\t\tthrow new TypeError( 'invalid argument. First argument must be an object. Value: `' + obj + '`.' );\n\t}\n\tif ( typeof descriptor !== 'object' || descriptor === null || toStr.call( descriptor ) === '[object Array]' ) {\n\t\tthrow new TypeError( 'invalid argument. Property descriptor must be an object. Value: `' + descriptor + '`.' );\n\t}\n\thasValue = ( 'value' in descriptor );\n\tif ( hasValue ) {\n\t\tif (\n\t\t\tlookupGetter.call( obj, prop ) ||\n\t\t\tlookupSetter.call( obj, prop )\n\t\t) {\n\t\t\t// Override `__proto__` to avoid touching inherited accessors:\n\t\t\tprototype = obj.__proto__;\n\t\t\tobj.__proto__ = objectProtoype;\n\n\t\t\t// Delete property as existing getters/setters prevent assigning value to specified property:\n\t\t\tdelete obj[ prop ];\n\t\t\tobj[ prop ] = descriptor.value;\n\n\t\t\t// Restore original prototype:\n\t\t\tobj.__proto__ = prototype;\n\t\t} else {\n\t\t\tobj[ prop ] = descriptor.value;\n\t\t}\n\t}\n\thasGet = ( 'get' in descriptor );\n\thasSet = ( 'set' in descriptor );\n\n\tif ( hasValue && ( hasGet || hasSet ) ) {\n\t\tthrow new Error( 'invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.' );\n\t}\n\n\tif ( hasGet && defineGetter ) {\n\t\tdefineGetter.call( obj, prop, descriptor.get );\n\t}\n\tif ( hasSet && defineSetter ) {\n\t\tdefineSetter.call( obj, prop, descriptor.set );\n\t}\n\treturn obj;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Define (or modify) an object property.\n*\n* @module @stdlib/utils-define-property\n*\n* @example\n* var defineProperty = require( '@stdlib/utils-define-property' );\n*\n* var obj = {};\n* defineProperty( obj, 'foo', {\n*     'value': 'bar',\n*     'writable': false,\n*     'configurable': false,\n*     'enumerable': false\n* });\n* obj.foo = 'boop'; // => throws\n*/\n\n// MODULES //\n\nvar hasDefinePropertySupport = require( './has_define_property_support.js' );\nvar builtin = require( './builtin.js' );\nvar polyfill = require( './polyfill.js' );\n\n\n// MAIN //\n\nvar defineProperty;\nif ( hasDefinePropertySupport() ) {\n\tdefineProperty = builtin;\n} else {\n\tdefineProperty = polyfill;\n}\n\n\n// EXPORTS //\n\nmodule.exports = defineProperty;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar defineProperty = require( '@stdlib/utils-define-property' );\n\n\n// MAIN //\n\n/**\n* Defines a non-enumerable read-only property.\n*\n* @param {Object} obj - object on which to define the property\n* @param {(string|symbol)} prop - property name\n* @param {*} value - value to set\n*\n* @example\n* var obj = {};\n*\n* setNonEnumerableReadOnly( obj, 'foo', 'bar' );\n*\n* try {\n*     obj.foo = 'boop';\n* } catch ( err ) {\n*     console.error( err.message );\n* }\n*/\nfunction setNonEnumerableReadOnly( obj, prop, value ) {\n\tdefineProperty( obj, prop, {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': false,\n\t\t'value': value\n\t});\n}\n\n\n// EXPORTS //\n\nmodule.exports = setNonEnumerableReadOnly;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the absolute value of `x`.\n*\n* @param {number} x - input value\n* @returns {number} absolute value\n*\n* @example\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* @example\n* var v = abs( 2.0 );\n* // returns 2.0\n*\n* @example\n* var v = abs( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = abs( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = abs( NaN );\n* // returns NaN\n*/\nfunction abs( x ) {\n\tif ( x < 0.0 ) {\n\t\treturn -x;\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math-base-special-fast-abs' );\n\n\n// VARIABLES //\n\n// 2*cos(pi/8)/(1+cos(pi/8)):\nvar ALPHA = 0.96043387010342;\n\n// 2*sin(pi/8)/(1+cos(pi/8)):\nvar BETA = 0.397824734759316;\n\n\n// MAIN //\n\n/**\n* Computes the hypotenuse using the alpha max plus beta min algorithm.\n*\n* @param {number} x - number\n* @param {number} y - number\n* @returns {number} hypotenuse\n*\n* @example\n* var h = hypot( -5.0, 12.0 );\n* // returns ~13.5\n*/\nfunction hypot( x, y ) {\n\tx = abs( x );\n\ty = abs( y );\n\tif ( x > y ) {\n\t\treturn (ALPHA*x) + (BETA*y);\n\t}\n\treturn (ALPHA*y) + (BETA*x);\n}\n\n\n// EXPORTS //\n\nmodule.exports = hypot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an absolute value.\n*\n* @module @stdlib/math-base-special-fast-abs\n*\n* @example\n* var abs = require( '@stdlib/math-base-special-fast-abs' );\n*\n* var v = abs( -1.0 );\n* // returns 1.0\n*\n* v = abs( 2.0 );\n* // returns 2.0\n*\n* v = abs( 0.0 );\n* // returns 0.0\n*\n* v = abs( -0.0 );\n* // returns -0.0\n*\n* v = abs( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar abs = require( './abs.js' );\n\n\n// EXPORTS //\n\nmodule.exports = abs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes an absolute value of a signed 32-bit integer in two's complement format.\n*\n* ## Method\n*\n* -   Assume two's complement format.\n* -   Create a mask by applying a sign propagating right-shift. For negative integers, this results in all `1`'s. For nonnegative integers, this results in all `0`'s.\n* -   XOR the mask with `x`. For negative integers, this is the equivalent of a NOT. For nonnegative integers, this is a no-op.\n* -   Subtract the mask to recover the absolute value. For negative integers, this adds `1`, which is `-x` when using two's complement. For nonnegative integers, this subtracts `0`.\n*\n* @param {integer32} x - integer\n* @returns {integer32} absolute value\n*\n* @example\n* var v = labs( -10|0 );\n* // returns 10\n*/\nfunction labs( x ) {\n\tvar mask;\n\tvar y;\n\n\ty = x|0; // asm type annotation\n\tmask = ( y >> 31 )|0; // asm type annotation\n\treturn ((y ^ mask) - mask)|0; // asm type annotation\n}\n\n\n// EXPORTS //\n\nmodule.exports = labs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math-base-special-labs' );\n\n\n// MAIN //\n\n/**\n* Computes the hypotenuse using the alpha max plus beta min algorithm, where `alpha = 1` and `beta = 1/2`.\n*\n* @private\n* @param {integer32} x - integer\n* @param {integer32} y - integer\n* @returns {number} hypotenuse\n*\n* @example\n* var h = hypot( 5.0, 12.0 );\n* // returns <number>\n*/\nfunction hypot( x, y ) {\n\tx = abs( x );\n\ty = abs( y );\n\tif ( x > y ) {\n\t\treturn x + (y>>>1);\n\t}\n\treturn (x>>>1) + y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hypot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute an absolute value of a signed 32-bit integer.\n*\n* @module @stdlib/math-base-special-labs\n*\n* @example\n* var labs = require( '@stdlib/math-base-special-labs' );\n*\n* var v = labs( -1|0 );\n* // returns 1\n*\n* v = labs( 2|0 );\n* // returns 2\n*\n* v = labs( 0|0 );\n* // returns 0\n*/\n\n// MODULES //\n\nvar labs = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = labs;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the hypotenuse using the alpha max plus beta min algorithm, where `alpha = 1` and `beta = 1/4`.\n*\n* @private\n* @param {uinteger32} x - integer\n* @param {uinteger32} y - integer\n* @returns {number} hypotenuse\n*\n* @example\n* var h = hypot( 5.0, 12.0 );\n* // returns <number>\n*/\nfunction hypot( x, y ) {\n\tif ( x > y ) {\n\t\treturn x + (y>>>2);\n\t}\n\treturn (x>>>2) + y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hypot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math-base-special-labs' );\n\n\n// MAIN //\n\n/**\n* Computes the hypotenuse using the alpha max plus beta min algorithm, where `alpha = 1` and `beta = 1/4`.\n*\n* @private\n* @param {integer32} x - integer\n* @param {integer32} y - integer\n* @returns {number} hypotenuse\n*\n* @example\n* var h = hypot( 5.0, 12.0 );\n* // returns <number>\n*/\nfunction hypot( x, y ) {\n\tx = abs( x );\n\ty = abs( y );\n\tif ( x > y ) {\n\t\treturn x + (y>>>2);\n\t}\n\treturn (x>>>2) + y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hypot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns a function to compute the hypotenuse using the alpha max plus beta min algorithm.\n*\n* @private\n* @param {number} alpha - alpha\n* @param {number} beta - beta\n* @returns {Function} function to compute the hypotenuse\n*\n* @example\n* var fcn = wrap( 1.0, 0.5 );\n* // returns <Function>\n*/\nfunction wrap( alpha, beta ) {\n\treturn hypot;\n\n\t/**\n\t* Computes the hypotenuse using the alpha max plus beta min algorithm.\n\t*\n\t* @private\n\t* @param {NonNegativeNumber} x - number\n\t* @param {NonNegativeNumber} y - number\n\t* @returns {number} hypotenuse\n\t*\n\t* @example\n\t* var h = hypot( 5.0, 12.0 );\n\t* // returns <number>\n\t*/\n\tfunction hypot( x, y ) {\n\t\tif ( x > y ) {\n\t\t\treturn (alpha*x) + (beta*y);\n\t\t}\n\t\treturn (beta*x) + (alpha*y);\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math-base-special-fast-abs' );\n\n\n// MAIN //\n\n/**\n* Returns a function to compute the hypotenuse using the alpha max plus beta min algorithm.\n*\n* @private\n* @param {number} alpha - alpha\n* @param {number} beta - beta\n* @returns {Function} function to compute the hypotenuse\n*\n* @example\n* var fcn = wrap( 1.0, 0.5 );\n* // returns <Function>\n*/\nfunction wrap( alpha, beta ) {\n\treturn hypot;\n\n\t/**\n\t* Computes the hypotenuse using the alpha max plus beta min algorithm.\n\t*\n\t* @private\n\t* @param {number} x - number\n\t* @param {number} y - number\n\t* @returns {number} hypotenuse\n\t*\n\t* @example\n\t* var h = hypot( 5.0, 12.0 );\n\t* // returns <number>\n\t*/\n\tfunction hypot( x, y ) {\n\t\tx = abs( x );\n\t\ty = abs( y );\n\t\tif ( x > y ) {\n\t\t\treturn (alpha*x) + (beta*y);\n\t\t}\n\t\treturn (beta*x) + (alpha*y);\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = wrap;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hypot1a = require( './hypot1a.js' );\nvar hypot1b = require( './hypot1b.js' );\nvar hypot2a = require( './hypot2a.js' );\nvar hypot2b = require( './hypot2b.js' );\nvar closure1a = require( './closure1a.js' );\nvar closure1b = require( './closure1b.js' );\n\n\n// MAIN //\n\n/**\n* Returns a function to compute a hypotenuse using the alpha max plus beta min algorithm.\n*\n* @param {number} alpha - alpha\n* @param {number} beta - beta\n* @param {boolean} [nonnegative] - boolean indicating whether input values are always nonnegative\n* @param {boolean} [ints] - boolean indicating whether input values are always 32-bit integers\n* @returns {Function} function to compute a hypotenuse\n*\n* @example\n* var hypot = factory( 1.0, 0.5 );\n* // returns <Function>\n*/\nfunction factory( alpha, beta, nonnegative, ints ) {\n\tif ( ints ) {\n\t\tif ( alpha === 1.0 && beta === 0.5 ) {\n\t\t\tif ( nonnegative ) {\n\t\t\t\treturn hypot1a;\n\t\t\t}\n\t\t\treturn hypot1b;\n\t\t}\n\t\tif ( alpha === 1.0 && beta === 0.25 ) {\n\t\t\tif ( nonnegative ) {\n\t\t\t\treturn hypot2a;\n\t\t\t}\n\t\t\treturn hypot2b;\n\t\t}\n\t}\n\tif ( nonnegative ) {\n\t\treturn closure1a( alpha, beta );\n\t}\n\treturn closure1b( alpha, beta );\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Computes the hypotenuse using the alpha max plus beta min algorithm, where `alpha = 1` and `beta = 1/2`.\n*\n* @private\n* @param {uinteger32} x - integer\n* @param {uinteger32} y - integer\n* @returns {number} hypotenuse\n*\n* @example\n* var h = hypot( 5.0, 12.0 );\n* // returns <number>\n*/\nfunction hypot( x, y ) {\n\tif ( x > y ) {\n\t\treturn x + (y>>>1);\n\t}\n\treturn (x>>>1) + y;\n}\n\n\n// EXPORTS //\n\nmodule.exports = hypot;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the hypotenuse.\n*\n* @module @stdlib/math-base-special-fast-alpha-max-plus-beta-min\n*\n* @example\n* var hypot = require( '@stdlib/math-base-special-fast-alpha-max-plus-beta-min' );\n*\n* var h = hypot( 5.0, 12.0 );\n* // returns ~13.5\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar hypot = require( './hypot.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( hypot, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = hypot;\n"],"names":["defineProperty","Object","has_define_property_support","err","builtin","objectProtoype","prototype","toStr","toString","defineGetter","__defineGetter__","defineSetter","__defineSetter__","lookupGetter","__lookupGetter__","lookupSetter","__lookupSetter__","require$$1","polyfill","obj","prop","descriptor","hasValue","hasGet","hasSet","call","TypeError","__proto__","value","Error","get","set","require$$0","abs_1","x","abs","ALPHA","BETA","main","mask","y","hypot1a","hypot1b","hypot2a","hypot2b","closure1a","alpha","beta","closure1b","hypot","configurable","enumerable","writable","setReadOnly","nonnegative","ints"],"mappings":"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"}